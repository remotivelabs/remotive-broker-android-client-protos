/*
 * Copyright 2023 Volvo Car Corporation
*/

filegroup {
    name: "google_api_protos",
    srcs: [
        "protos/google/api/annotations.proto",
        "protos/google/api/http.proto",
    ],
}

genrule {
    name: "network_api_proto_h",
    tools: [
        "aprotoc",
        "protoc-gen-grpc-cpp-plugin",
    ],
    cmd: "$(location aprotoc) -I$$(dirname $(location protos/network_api.proto))  -Iexternal/protobuf/src --plugin=protoc-gen-grpc=$(location protoc-gen-grpc-cpp-plugin) $(in) --grpc_out=$(genDir) --cpp_out=$(genDir)",
    srcs: [
        "protos/network_api.proto",
        "protos/common.proto",
        ":google_api_protos",
        ":libprotobuf-internal-protos",
    ],
    out: [
        "network_api.grpc.pb.h",
        "network_api.pb.h",
        "google/api/annotations.pb.h",
        "google/api/http.pb.h",
    ],
}

genrule {
    name: "network_api_proto_cc",
    tools: [
        "aprotoc",
        "protoc-gen-grpc-cpp-plugin",
    ],
    cmd: "$(location aprotoc) -I$$(dirname $(location protos/network_api.proto)) -Iexternal/protobuf/src --plugin=protoc-gen-grpc=$(location protoc-gen-grpc-cpp-plugin) $(in) --grpc_out=$(genDir) --cpp_out=$(genDir)",
    srcs: [
        "protos/network_api.proto",
        "protos/common.proto",
        ":google_api_protos",
        ":libprotobuf-internal-protos",
    ],
    out: [
        "network_api.grpc.pb.cc",
        "network_api.pb.cc",
        "google/api/annotations.pb.cc",
        "google/api/http.pb.cc",
    ],
}

genrule {
    name: "common_proto_h",
    tools: [
        "aprotoc",
        "protoc-gen-grpc-cpp-plugin",
    ],
    cmd: "$(location aprotoc) -I$$(dirname $(location protos/common.proto)) -Iexternal/protobuf/src --plugin=protoc-gen-grpc=$(location protoc-gen-grpc-cpp-plugin) $(in) --grpc_out=$(genDir) --cpp_out=$(genDir)",
    srcs: [
        "protos/common.proto",
        ":libprotobuf-internal-protos",
    ],
    out: [
        "common.grpc.pb.h",
        "common.pb.h",
    ],
}

genrule {
    name: "common_proto_cc",
    tools: [
        "aprotoc",
        "protoc-gen-grpc-cpp-plugin",
    ],
    cmd: "$(location aprotoc) -I$$(dirname $(location protos/common.proto)) -Iexternal/protobuf/src --plugin=protoc-gen-grpc=$(location protoc-gen-grpc-cpp-plugin) $(in) --grpc_out=$(genDir) --cpp_out=$(genDir)",
    srcs: [
        "protos/common.proto",
        ":libprotobuf-internal-protos",
    ],
    out: [
        "common.grpc.pb.cc",
        "common.pb.cc",
    ],
}

genrule {
    name: "system_api_proto_h",
    tools: [
        "aprotoc",
        "protoc-gen-grpc-cpp-plugin",
    ],
    cmd: "$(location aprotoc) -I$$(dirname $(location protos/system_api.proto)) -Iexternal/protobuf/src --plugin=protoc-gen-grpc=$(location protoc-gen-grpc-cpp-plugin) $(in) --grpc_out=$(genDir) --cpp_out=$(genDir)",
    srcs: [
        "protos/system_api.proto",
        "protos/common.proto",
        ":google_api_protos",
        ":libprotobuf-internal-protos",
    ],
    out: [
        "system_api.grpc.pb.h",
        "system_api.pb.h",
    ],
}

genrule {
    name: "system_api_proto_cc",
    tools: [
        "aprotoc",
        "protoc-gen-grpc-cpp-plugin",
    ],
    cmd: "$(location aprotoc) -I$$(dirname $(location protos/system_api.proto)) -Iexternal/protobuf/src --plugin=protoc-gen-grpc=$(location protoc-gen-grpc-cpp-plugin) $(in) --grpc_out=$(genDir) --cpp_out=$(genDir)",
    srcs: [
        "protos/system_api.proto",
        "protos/common.proto",
        ":google_api_protos",
        ":libprotobuf-internal-protos",
    ],
    out: [
        "system_api.grpc.pb.cc",
        "system_api.pb.cc",
    ],
}


cc_library {
    name: "remotivelabs-grpc-lib",
    vendor: true,
    vendor_available: false,

    rtti: false,
    tidy: false,

    include_dirs: [
        "external/protobuf/src",
    ],

    generated_sources: [
        "network_api_proto_cc",
        "common_proto_cc",
        "system_api_proto_cc",
    ],

    generated_headers: [
        "network_api_proto_h",
        "common_proto_h",
        "system_api_proto_h",
    ],

    export_generated_headers: [
        "network_api_proto_h",
        "common_proto_h",
        "system_api_proto_h",
    ],

    shared_libs: [
        "libgrpc++",
        "libprotobuf-cpp-full",
    ],

    cflags: [
        "-Wno-unused-parameter",
        "-DGOOGLE_PROTOBUF_NO_RTTI=1",
    ],

    tidy_checks: [
        "-clang-analyzer-optin.cplusplus.UninitializedObject",
    ],
}